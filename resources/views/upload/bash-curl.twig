{#
This file is part of sleeti.
Copyright (C) 2016  Eliot Partridge

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
#}

{% extends 'templates/app.twig' %}

{% block title %}Bash + cURL{% endblock %}

{% block content %}
	<div class="row">
		<div class="col-md-12">
			<h2>Uploading with Bash and cURL</h2>
			<p>
				To use {{ settings.site.title | default('sleeti') }} with cURL and bash, use the following command:
			</p>
			<pre><code>curl -s -F file=@"/path/to/file.ext" -F identifier="{{ auth.user.username }}" -F password="PUT YOUR PASSWORD HERE" "{{ site.url }}"</code></pre>

			<p>
				Alternatively, use the following Bash script.
			</p>
			<pre><code>#!/bin/bash

site="{{ site.url }}"

user="{{ auth.user.username }}" # your username
pass="PUT YOUR PASSWORD HERE" # your password

exit_with_error() {
	>&amp;2 echo "`basename "$0"`: $1"
	exit $2
}

usage() {
	echo "sleeti upload script"
	echo ""
	echo "Usage:"
	echo "    `basename "$0"` &lt;file&gt;"
	echo "Arguments:"
	echo "    file    The file to upload (when -, read stdin)"
	echo "Exit codes:"
	echo "    1       file not found"
	echo "    2       no file specified"
	echo "    3       required details missing"
	echo "    127     dependency missing"
	echo ""
	echo "Direct all issues to Byte, and all hate to /dev/null. &lt;3"
}

# test for missing command dependencies
type curl >/dev/null 2>&amp;1 || exit_with_error "curl: command not found" 127

if [ -x "$site" ]; then
	exit_with_error "no site specified - see script source" 3
fi

if [ -z "$user" ]; then
	exit_with_error "no user specified - see script source" 3
fi

if [ -z "$pass" ]; then
	exit_with_error "no password specified - see script source" 3
fi

if [ -z "$1" ]; then
	usage
	echo ""
	exit_with_error "no file specified" 2
fi

if [ ! "$1" = "-" ]; then
	if [ ! -f "$1" ]; then
		exit_with_error "$1: file not found" 1
	fi
else
	echo "^D to upload"
fi

echo $(curl -s -F file=@"$1" -F identifier="$user" -F password="$pass" "$site")</code></pre>
		</div>
	</div>
{% endblock %}
